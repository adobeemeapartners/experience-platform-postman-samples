{
  "info": {
    "_postman_id": "388a1d46-dc9a-4733-99c4-b4b04fd6f081",
    "name": "Check Streaming to Profile",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "name": "Auth setup",
      "item": [
        {
          "name": "INIT: Load Crypto Library for RS256",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "824e628b-b420-417b-894b-417ab6412896",
                "exec": [
                  "postman.setGlobalVariable(\"jsrsasign-js\", responseBody);",
                  "tests[\"Javascript load complete\"] = true; "
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "2ce29808-ec05-4f67-973b-a2601cba627c",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "url": "http://kjur.github.io/jsrsasign/jsrsasign-latest-all-min.js",
            "description": "Load the RSA-Sign Crypto LIbrary in a global environment variable\n\nSource: http://kjur.github.io/jsrsasign/jsrsasign-latest-all-min.js\n\nGithub: https://github.com/kjur/jsrsasign"
          },
          "response": []
        },
        {
          "name": "IMS: JWT Generate + Auth via User Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1759a9d4-ac9a-4eb2-b5d1-a608a43a2cad",
                "exec": [
                  "var data = JSON.parse(responseBody);",
                  "",
                  "if (data.access_token) {",
                  "    postman.setEnvironmentVariable(\"ACCESS_TOKEN\", data.access_token);",
                  "} else {",
                  "    console.log(\"Unable to acquire ACCESS_TOKEN from Adobe IMS to make further calls to Adobe I/O APIs.\")",
                  "}"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "f067b81f-65d2-4672-ae41-0ff1338d25f6",
                "exec": [
                  "// Tips from: https://github.com/kjur/jsrsasign/issues/199",
                  "// https://github.com/kjur/jsrsasign/wiki/Tutorial-for-JWT-generation",
                  "",
                  "var navigator = {}; //fake a navigator object for the lib",
                  "var window = {}; //fake a window object for the lib",
                  "eval(postman.getGlobalVariable(\"jsrsasign-js\")); //import javascript jsrsasign",
                  "",
                  "",
                  "var header = {",
                  "\t\"alg\": \"RS256\"",
                  "};",
                  "",
                  "var data = {",
                  "\t\"exp\": Math.round(87000 + Date.now()/1000),",
                  "\t\"iss\": postman.getEnvironmentVariable(\"IMS_ORG\"),",
                  "\t\"sub\": postman.getEnvironmentVariable(\"TECHNICAL_ACCOUNT_ID\"),",
                  "\t\"aud\": \"https://\" + postman.getEnvironmentVariable(\"IMS\")+\"/c/\"+postman.getEnvironmentVariable(\"API_KEY\")",
                  "};",
                  "",
                  "meta_scopes = postman.getEnvironmentVariable(\"META_SCOPE\");",
                  "meta_scopes.forEach(function(scope){",
                  "    var meta_scope = \"https://\" + postman.getEnvironmentVariable(\"IMS\")+\"/s/\"+",
                  "                     scope;",
                  "    data[meta_scope] = true;",
                  "});",
                  "",
                  "var secret = postman.getEnvironmentVariable(\"PRIVATE_KEY\");",
                  "",
                  "if (!secret) {",
                  "    console.log(\"Ensure the Private Key is added to both INITIAL and CURRENT VALUES in the active Postman environment's PRIVATE_KEY variable.\");",
                  "}",
                  "",
                  "console.log(data);",
                  "",
                  "var sHeader = JSON.stringify(header);",
                  "var sPayload = JSON.stringify(data);",
                  "var sJWT = KJUR.jws.JWS.sign(\"RS256\", sHeader, sPayload, secret);",
                  "",
                  "console.log(sJWT);",
                  "",
                  "postman.setEnvironmentVariable(\"JWT_TOKEN\", sJWT);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "d027f611-5627-44fe-8647-fb394da0253d",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "client_id",
                  "value": "{{API_KEY}}",
                  "type": "text"
                },
                {
                  "key": "client_secret",
                  "value": "{{CLIENT_SECRET}}",
                  "type": "text"
                },
                {
                  "key": "jwt_token",
                  "value": "{{JWT_TOKEN}}",
                  "type": "text"
                }
              ]
            },
            "url": "https://{{IMS}}/ims/exchange/jwt/",
            "description": "Generate a JWT token using the Crypto RS256\nSend to IMS for access_token"
          },
          "response": []
        }
      ],
      "_postman_id": "43792bcd-3252-4b1f-b4d2-678cc3e00d3f",
      "description": "Test the Markdown",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "5d587611-840d-4c76-a6a7-7048b56c4a38",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "ded6d34d-ea4c-4791-b433-c5f0a7e047d2",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    },
    {
      "name": "Create Profile Schema",
      "item": [
        {
          "name": "Create Profile SCHEMA USING Profile Class",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "47da0211-ab07-460a-bb30-0be8ec0a9a15",
                "exec": [
                  "var json = JSON.parse(responseBody);",
                  "//postman.setEnvironmentVariable(\"TEST\", json.version);",
                  "",
                  "//console.log(json);",
                  "",
                  "var PROFILESCHEMAFULL = json['meta:altId'];",
                  "postman.setEnvironmentVariable(\"PROFILESCHEMAFULL\", PROFILESCHEMAFULL);",
                  "tests[\"PROFILESCHEMAFULL = \" + PROFILESCHEMAFULL] = true; ",
                  "",
                  "var PROFILESCHEMAURL = json.$id;",
                  "postman.setEnvironmentVariable(\"PROFILESCHEMAURL\", PROFILESCHEMAURL);",
                  "tests[\"PROFILESCHEMAURL = \" + PROFILESCHEMAURL] = true; ",
                  "",
                  "var SPLIT_HEADER = PROFILESCHEMAURL.split('/');",
                  "var PROFILESCHEMAID = SPLIT_HEADER[5];",
                  "postman.setEnvironmentVariable(\"PROFILESCHEMAID\", PROFILESCHEMAID);",
                  "tests[\"PROFILESCHEMAID = \" + PROFILESCHEMAID] = true; ",
                  "",
                  "tests[\"Refer to https://wiki.corp.adobe.com/pages/viewpage.action?pageId=1579435795\"] = true    ",
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "d9b2a742-1459-453d-b54a-169cbc9d7fcd",
                "exec": [
                  "var RUNDESIGNATION;",
                  "postman.setEnvironmentVariable(\"RUNDESIGNATION\", Date.now());",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "746175c7-9edd-498c-bd3c-504747d53ba3",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{ACCESS_TOKEN}}",
                "disabled": true
              },
              {
                "key": "x-api-key",
                "value": "{{API_KEY}}"
              },
              {
                "key": "x-gw-ims-org-id",
                "value": "{{IMS_ORG}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-sandbox-name",
                "value": "",
                "type": "text",
                "disabled": true
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"object\",\n  \"title\": \"Profile Schema for Identity Linking - IdentityMap case {{RUNDESIGNATION}}\",\n  \"meta:extensible\": false,\n  \"meta:abstract\": false,\n  \"auditable\": true,\n  \"description\": \"Profile Schema for Identity Linking - IdentityMap case {{RUNDESIGNATION}}\",\n  \"definitions\": {\n  },\n  \"meta:immutableTags\": [\n        \"union\"\n    ],\n  \"allOf\": [\n    {\n      \"$ref\": \"https://ns.adobe.com/xdm/context/profile\"\n    },\n    {\n      \"$ref\": \"https://ns.adobe.com/xdm/context/identitymap\"\n    }\n  ]\n}"
            },
            "url": "https://{{PLATFORM_GATEWAY}}/data/foundation/schemaregistry/tenant/schemas",
            "description": "Create Customer Schema (target schema) in tenant"
          },
          "response": []
        },
        {
          "name": "Create Profile Dataset Streaming enabled",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "91bb99e3-9026-44a4-bfd9-ba61e96d9ba0",
                "exec": [
                  "postman.setEnvironmentVariable(\"LOCATIONDATASETFILEID\", postman.getResponseHeader(\"LOCATION\"));",
                  "var LOCATIONDATASETFILEID = postman.getResponseHeader(\"LOCATION\");",
                  "var SPLIT_HEADER = LOCATIONDATASETFILEID.split('/');",
                  "var NEWDATASETFILEID = SPLIT_HEADER[5]",
                  "tests[\"Raw = \" + NEWDATASETFILEID] = true; ",
                  "postman.setEnvironmentVariable(\"NEWPROFILEDATASETID\", SPLIT_HEADER[5]);",
                  "    tests[\"NEWPROFILEDATASETID = \" + NEWDATASETFILEID] = true;   ",
                  "    tests[\"Refer to https://wiki.corp.adobe.com/pages/viewpage.action?pageId=1579435795\"] = true    ",
                  "    postman.setEnvironmentVariable(\"PROFILE_DATASET_HAS_BATCH\", \"no\");"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "0e5acf80-1c0c-4508-8e77-1a3bb2494a18",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": {
                "token": "{{ACCESS_TOKEN}}"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "accept",
                "value": "application/json"
              },
              {
                "key": "x-gw-ims-org-id",
                "value": "{{IMS_ORG}}"
              },
              {
                "key": "x-api-key",
                "value": "{{API_KEY}}"
              },
              {
                "key": "requestDataSource",
                "value": "true"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-sandbox-name",
                "value": "",
                "type": "text",
                "disabled": true
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n   \"schemaRef\": {\n      \"id\": \"{{PROFILESCHEMAURL}}\",\n      \"contentType\": \"application/vnd.adobe.xed+json; version=1\"\n   },\n   \"name\": \"Test Profile Schema for Identity Linking {{RUNDESIGNATION}}\",\n   \"description\": \"Hello World test for Profile Identity Linking {{RUNDESIGNATION}}\",\n   \"fileDescription\": {\n      \"persisted\": true,\n      \"containerFormat\": \"parquet\",\n      \"format\": \"parquet\"\n   },\n   \"aspect\": \"production\",\n   \"tags\": \n\t{\n           \"unifiedIdentity\": [\"enabled:true\"],\n           \"unifiedProfile\": [\"enabled:true\"]\n\t},\n\t\"streamingIngestionEnabled\": \"true\"\n}"
            },
            "url": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/dataSets"
          },
          "response": []
        }
      ],
      "_postman_id": "4c6fd9a9-0df4-4a1d-99da-fae8b8b29d89"
    },
    {
      "name": "Create ExpEvent Schema",
      "item": [
        {
          "name": "Create ExpEvent SCHEMA",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "47da0211-ab07-460a-bb30-0be8ec0a9a15",
                "exec": [
                  "var json = JSON.parse(responseBody);",
                  "//postman.setEnvironmentVariable(\"TEST\", json.version);",
                  "",
                  "//console.log(json);",
                  "",
                  "var EXPEVENTSCHEMAFULL = json['meta:altId'];",
                  "postman.setEnvironmentVariable(\"EXPEVENTSCHEMAFULL\", EXPEVENTSCHEMAFULL);",
                  "tests[\"EXPEVENTSCHEMAFULL = \" + EXPEVENTSCHEMAFULL] = true; ",
                  "",
                  "var EXPEVENTSCHEMAURL = json.$id;",
                  "postman.setEnvironmentVariable(\"EXPEVENTSCHEMAURL\", EXPEVENTSCHEMAURL);",
                  "tests[\"EXPEVENTSCHEMAURL = \" + EXPEVENTSCHEMAURL] = true; ",
                  "",
                  "var SPLIT_HEADER = EXPEVENTSCHEMAURL.split('/');",
                  "var EXPEVENTSCHEMAID = SPLIT_HEADER[5];",
                  "postman.setEnvironmentVariable(\"EXPEVENTSCHEMAID\", EXPEVENTSCHEMAID);",
                  "tests[\"EXPEVENTSCHEMAID = \" + EXPEVENTSCHEMAID] = true; ",
                  "",
                  "    tests[\"Refer to https://wiki.corp.adobe.com/pages/viewpage.action?pageId=1579435795\"] = true    ",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "5bc9a186-1de4-424f-9a4b-32f6ddc98c72",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{ACCESS_TOKEN}}"
              },
              {
                "key": "x-api-key",
                "value": "{{API_KEY}}"
              },
              {
                "key": "x-gw-ims-org-id",
                "value": "{{IMS_ORG}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-sandbox-name",
                "value": "",
                "type": "text",
                "disabled": true
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"object\",\n  \"title\": \"ExperienceEvent Schema for Identity Linking - IdentityMap {{RUNDESIGNATION}}\",\n  \"meta:extensible\": false,\n  \"meta:abstract\": false,\n  \"auditable\": true,\n  \"description\": \"ExperienceEvent Schema for Identity Linking - IdentityMap {{RUNDESIGNATION}}\",\n  \"definitions\": {\n  },\n  \"meta:immutableTags\": [\n        \"union\"\n  ],\n  \"allOf\": [\n    {\n      \"$ref\": \"https://ns.adobe.com/xdm/context/experienceevent\"\n    },\n    {\n      \"$ref\": \"https://ns.adobe.com/xdm/context/experienceevent-marketing\"\n    },\n    {\n        \"$ref\": \"https://ns.adobe.com/xdm/context/identitymap\"\n    }\n  ]\n}"
            },
            "url": "https://{{PLATFORM_GATEWAY}}/data/foundation/schemaregistry/tenant/schemas",
            "description": "Create Customer Schema (target schema) in tenant"
          },
          "response": []
        },
        {
          "name": "Create ExpEvent Dataset Streaming enabled",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "91bb99e3-9026-44a4-bfd9-ba61e96d9ba0",
                "exec": [
                  "postman.setEnvironmentVariable(\"LOCATIONDATASETFILEID\", postman.getResponseHeader(\"LOCATION\"));",
                  "var LOCATIONDATASETFILEID = postman.getResponseHeader(\"LOCATION\");",
                  "var SPLIT_HEADER = LOCATIONDATASETFILEID.split('/');",
                  "var NEWDATASETFILEID = SPLIT_HEADER[5]",
                  "tests[\"Raw = \" + NEWDATASETFILEID] = true; ",
                  "postman.setEnvironmentVariable(\"NEWEXPEVENTDATASETID\", SPLIT_HEADER[5]);",
                  "    tests[\"NEWEXPEVENTDATASETID = \" + NEWDATASETFILEID] = true;      ",
                  "tests[\"Refer to https://wiki.corp.adobe.com/pages/viewpage.action?pageId=1579435795\"] = true    ",
                  "",
                  "//Initialize Variables",
                  "    postman.setEnvironmentVariable(\"EXPEVENT_DATASET_HAS_BATCH\", \"no\");",
                  "    pm.environment.set(\"EXPEVENTBATCHCOMPLETE\",\"no\");",
                  "    pm.environment.set(\"PROFILEBATCHCOMPLETE\",\"no\");",
                  "    pm.environment.set(\"profileToLookupECIDComplete\",\"no\");",
                  "    pm.environment.set(\"expEventToLookupECIDComplete\",\"no\");",
                  "    pm.environment.set(\"profileToIdentityECIDComplete\",\"no\");    ",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "5e08fbb3-56a3-48d4-85b2-310555bba5aa",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": {
                "token": "{{ACCESS_TOKEN}}"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "accept",
                "value": "application/json"
              },
              {
                "key": "x-gw-ims-org-id",
                "value": "{{IMS_ORG}}"
              },
              {
                "key": "x-api-key",
                "value": "{{API_KEY}}"
              },
              {
                "key": "requestDataSource",
                "value": "true"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-sandbox-name",
                "value": "",
                "type": "text",
                "disabled": true
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n   \"schemaRef\": {\n      \"id\": \"{{EXPEVENTSCHEMAURL}}\",\n      \"contentType\": \"application/vnd.adobe.xed+json; version=1\"\n   },\n   \"name\": \"Test Experience Event Schema for Identity Linking {{RUNDESIGNATION}}\",\n   \"description\": \"Hello World test for Profile Identity Linking {{RUNDESIGNATION}}\",\n   \"fileDescription\": {\n      \"persisted\": true,\n      \"containerFormat\": \"parquet\",\n      \"format\": \"parquet\"\n   },\n   \"aspect\": \"production\",\n   \"streamingIngestionEnabled\": \"true\",\n   \"tags\": \n\t{\n           \"unifiedIdentity\": [\"enabled:true\"],\n           \"unifiedProfile\": [\"enabled:true\"]\n\t}\n}"
            },
            "url": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/dataSets"
          },
          "response": []
        }
      ],
      "_postman_id": "3498e890-4159-4f4c-8e32-7a9f81938662"
    },
    {
      "name": "Get Streaming Endpoint",
      "item": [
        {
          "name": "Streaming - Get first Streaming Endpoint",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9410c04a-06ae-4067-867b-d1e205248399",
                "exec": [
                  "var json = JSON.parse(responseBody);",
                  "",
                  "//for(var firstKey in json);",
                  "//    postman.setEnvironmentVariable(\"FIRST_KEY\", firstKey);",
                  "    postman.setEnvironmentVariable(\"STREAMINGENDPOINTID\", json.items[0].inletUrl);",
                  "    tests[\"STREAMINGENDPOINTID = \" + json.items[0].inletUrl] = true;",
                  "    tests[\"Description = \" + json.items[0].description] = true;",
                  "    tests[\"IMS Org = \" + json.items[0].imsOrg] = true; ",
                  "    tests[\"Source ID = \" + json.items[0].sourceId] = true;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "f536fd50-169e-4bd0-a690-801ffcf589ec",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{ACCESS_TOKEN}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{API_KEY}}"
              },
              {
                "key": "x-gw-ims-org-id",
                "value": "{{IMS_ORG}}"
              },
              {
                "key": "x-sandbox-name",
                "value": "",
                "type": "text",
                "disabled": true
              }
            ],
            "url": "https://{{PLATFORM_GATEWAY}}/data/core/edge/inlet/"
          },
          "response": []
        }
      ],
      "_postman_id": "9aa26802-7554-4598-b31d-902d76c57687",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "9e30d936-8741-4a8a-9c05-e99e10504aa7",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "43e9950e-e01c-4810-a37f-73e34e2dc0d4",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    },
    {
      "name": "Load Streaming Data - Profile and Exp Event",
      "item": [
        {
          "name": "Streaming - Profile Ingest - 3 records in IdentityMap",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "527493e1-a410-4a34-8fbd-fa3117d4a6f4",
                "exec": [
                  "var PROFILERUNSTART;",
                  "var PROFILEBATCHCOMPLETE;",
                  "postman.setEnvironmentVariable(\"PROFILERUNSTART\", Date.now());",
                  "postman.setEnvironmentVariable(\"PROFILEBATCHCOMPLETE\", \"no\");"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "73e646f3-08f3-49a1-9603-69d7e58a9da6",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "x-gw-ims-org-id",
                "value": "{{IMS_ORG}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{API_KEY}}"
              },
              {
                "key": "x-sandbox-name",
                "value": "",
                "type": "text",
                "disabled": true
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"header\": {\n        \"msgType\": \"xdmEntityCreate\",\n        \"msgVersion\": \"1.0\",\n        \"msgId\": \"123456\",\n        \"schemaRef\": {\n                \"id\": \"{{PROFILESCHEMAURL}}\",\n                \"contentType\": \"application/vnd.adobe.xed-full+json;version=1.3\"\n        },\n        \"imsOrgId\": \"{{IMS_ORG}}\",\n        \"source\": {\n            \"name\": \"GettingStarted\",\n            \"id\": \"999999\"\n        },\n        \"eventType\": \"mobile_interaction\",\n        \"action\": \"update\",\n        \"createdAt\": \"1524467240\",\n        \"datasetId\": \"{{NEWPROFILEDATASETID}}\"\n    },\n    \"body\": {\n        \"xdmMeta\": {\n        \"schemaRef\": {\n                \"id\": \"{{PROFILESCHEMAURL}}\",\n                \"contentType\": \"application/vnd.adobe.xed-full+json;version=1.3\"\n        }\n        },\n        \"xdmEntity\": {\n            \"identityMap\": \n            \t{\n    \t\t\t\"ECID\": [\n        \t\t\t{\n            \t\t\"id\": \"100000000000000000000000{{RUNDESIGNATION}}1\"\n        \t\t\t}\n    \t\t\t],\n\t\t\t\t\"EMAIL\": [\n        \t\t\t{\n            \t\t\"id\": \"prorecords{{RUNDESIGNATION}}@adobe.com\"\n        \t\t\t}\n    \t\t\t],\n    \t\t\t\"CRMID\": [\n        \t\t\t{\n            \t\t\"id\": \"{{RUNDESIGNATION}}prorecords\"\n        \t\t\t}\n    \t\t\t]\n\t\t\t\t}\n        }\n    }\n}"
            },
            "url": "{{STREAMINGENDPOINTID}}"
          },
          "response": []
        },
        {
          "name": "Streaming - Profile Ingest - 3 records in IdentityMap Santhosh",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "527493e1-a410-4a34-8fbd-fa3117d4a6f4",
                "exec": [
                  "var PROFILERUNSTART;",
                  "var PROFILEBATCHCOMPLETE;",
                  "postman.setEnvironmentVariable(\"PROFILERUNSTART\", Date.now());",
                  "postman.setEnvironmentVariable(\"PROFILEBATCHCOMPLETE\", \"no\");"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "b1b776f7-34fb-476c-8703-59acf8736b34",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "x-gw-ims-org-id",
                "value": "{{IMS_ORG}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{API_KEY}}"
              },
              {
                "key": "x-sandbox-name",
                "type": "text",
                "value": "golden-data-test"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"header\": {\n    \"msgType\": \"xdmEntityCreate\",\n    \"msgVersion\": \"1.0\",\n    \"msgId\": \"123456\",\n    \"schemaRef\": {\n      \"id\": \"https://ns.adobe.com/acpccedemo/schemas/c257e599858d8503e922f8e12099664f\",\n      \"contentType\": \"application/vnd.adobe.xed-full+json;version=1.3\"\n    },\n    \"imsOrgId\": \"{{IMS_ORG}}\",\n    \"source\": {\n      \"name\": \"GettingStarted\",\n      \"id\": \"999999\"\n    },\n    \"eventType\": \"mobile_interaction\",\n    \"action\": \"update\",\n    \"createdAt\": \"1524467240\",\n    \"datasetId\": \"5de952059edecf18a837c44f\"\n  },\n  \"body\": {\n    \"xdmMeta\": {\n      \"schemaRef\": {\n        \"id\": \"https://ns.adobe.com/acpccedemo/schemas/c257e599858d8503e922f8e12099664f\",\n        \"contentType\": \"application/vnd.adobe.xed-full+json;version=1.3\"\n      }\n    },\n    \"xdmEntity\": {\n      \"personalEmail\": {\n        \"address\": \"brunomars@adobe.com\"\n      },\n      \"optInOut\": {\n        \"_channels\": {\n          \"email\": \"in\"\n        }\n      },\n      \"_acpccedemo\": {\n        \"crmID\": \"YnJ1bm9tYXJzQGFkb2JlLmNvbQ==\"\n      },\n      \"person\": {\n        \"name\": {\n          \"lastName\": \"Mars\",\n          \"firstName\": \"Bruno\"\n        }\n      },\n      \"identityMap\": {\n        \"crmid\": [\n          {\n            \"id\": \"YnJ1bm9tYXJzQGFkb2JlLmNvbQ==\",\n            \"authenticatedState\": \"authenticated\",\n            \"primary\": false\n          }\n        ],\n        \"ECID\": [\n          {\n            \"id\": \"78311988187408304103774933770464817827\",\n            \"authenticatedState\": \"authenticated\",\n            \"primary\": false\n          }\n        ],\n        \"Email\": [\n          {\n            \"id\": \"brunomars@adobe.com\",\n            \"authenticatedState\": \"authenticated\",\n            \"primary\": true\n          }\n        ]\n      }\n    }\n  }\n}"
            },
            "url": "https://dcs.adobedc.net/collection/57503ba2e953c60a2a694865f2fc0293dd8e970e34be9e6f7e8cb19ba416478b"
          },
          "response": []
        },
        {
          "name": "Streaming - ExpEvent Ingest CRM ID 3 Profile Link",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "ab2cd327-3c75-4ecd-80b9-4a5188a3cd56",
                "exec": [
                  "var EXPEVENTRUNSTART;",
                  "var EXPEVENTBATCHCOMPLETE;",
                  "postman.setEnvironmentVariable(\"EXPEVENTRUNSTART\", Date.now());",
                  "postman.setEnvironmentVariable(\"EXPEVENTBATCHCOMPLETE\", \"no\");"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "047c7935-a44f-4a97-9900-bf5d5c8106a2",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-gw-ims-org-id",
                "value": "{{IMS_ORG}}"
              },
              {
                "key": "x-api-key",
                "value": "{{API_KEY}}"
              },
              {
                "key": "x-sandbox-name",
                "value": "",
                "type": "text",
                "disabled": true
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"header\": {\n    \"msgType\": \"xdmEntityCreate\",\n    \"msgVersion\": \"1.0\",\n    \"schemaRef\": {\n    \t\t\"id\": \"{{EXPEVENTSCHEMAURL}}\",\n    \t\t\"contentType\": \"application/vnd.adobe.xed-full+json;version=1.3\"\n            },\n    \"imsOrgId\": \"{{IMS_ORG}}\",\n    \"source\": {\n      \"name\": \"GettingStarted\",\n      \"id\": \"999999\"\n    },\n    \"eventType\": \"mobile_interaction\",\n    \"action\": \"update\",\n    \"createdAt\": \"1524467240\",\n    \"datasetId\": \"{{NEWEXPEVENTDATASETID}}\"\n  },\n  \"body\": {\n    \"xdmMeta\": {\n        \"schemaRef\": {\n                \"id\": \"{{EXPEVENTSCHEMAURL}}\",\n                \"contentType\": \"application/vnd.adobe.xed-full+json;version=1.3\"\n            }\n    },\n    \"xdmEntity\": {\n       \"identityMap\": \n            \t{\n    \t\t\t\"CRMID\": [\n        \t\t\t{\n            \t\t\"id\": \"{{RUNDESIGNATION}}prorecords\"\n        \t\t\t}\n    \t\t\t]\n\t\t\t\t},\n      \"_id\": \"231\",\n      \"timestamp\": \"2019-02-06T18:23:32Z\",\n      \"marketing\" : {\n    \t\"trackingCode\" : \"crmidstream1profile\"\n\t\t}\n    }\n  }\n}"
            },
            "url": "{{STREAMINGENDPOINTID}}"
          },
          "response": []
        },
        {
          "name": "Streaming - ExpEvent Ingest Email 3 Email Link",
          "_postman_id": "b19a12f2-ba0c-44df-bd4b-26afb37127e6",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-gw-ims-org-id",
                "value": "{{IMS_ORG}}"
              },
              {
                "key": "x-api-key",
                "value": "{{API_KEY}}"
              },
              {
                "key": "x-sandbox-name",
                "value": "",
                "type": "text",
                "disabled": true
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"header\": {\n    \"msgType\": \"xdmEntityCreate\",\n    \"msgVersion\": \"1.0\",\n    \"schemaRef\": {\n                \"id\": \"{{EXPEVENTSCHEMAURL}}\",\n                \"contentType\": \"application/vnd.adobe.xed-full+json;version=1.3\"\n            },\n    \"imsOrgId\": \"{{IMS_ORG}}\",\n    \"source\": {\n      \"name\": \"GettingStarted\",\n      \"id\": \"999999\"\n    },\n    \"eventType\": \"mobile_interaction\",\n    \"action\": \"update\",\n    \"createdAt\": \"1524467240\",\n    \"datasetId\": \"{{NEWEXPEVENTDATASETID}}\"\n  },\n  \"body\": {\n    \"xdmMeta\": {\n    \"schemaRef\": {\n                \"id\": \"{{EXPEVENTSCHEMAURL}}\",\n                \"contentType\": \"application/vnd.adobe.xed-full+json;version=1.3\"\n            }\n    },\n    \"xdmEntity\": {\n       \"identityMap\": \n            \t{\n    \t\t\t\"Email\": [\n        \t\t\t{\n            \t\t\"id\": \"prorecords{{RUNDESIGNATION}}@adobe.com\"\n        \t\t\t}\n    \t\t\t]\n\t\t\t\t},\n      \"_id\": \"231\",\n      \"timestamp\": \"2019-02-06T18:23:32Z\",\n      \"marketing\" : {\n    \t\"trackingCode\" : \"streamemail1profile\"\n\t\t}\n    }\n  }\n}"
            },
            "url": "{{STREAMINGENDPOINTID}}"
          },
          "response": []
        },
        {
          "name": "Streaming - ExpEvent Ingest ECID 3 ECID Link",
          "_postman_id": "86d283cf-eca0-4a5d-92aa-8c489b09692d",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-gw-ims-org-id",
                "value": "{{IMS_ORG}}"
              },
              {
                "key": "x-api-key",
                "value": "{{API_KEY}}"
              },
              {
                "key": "x-sandbox-name",
                "type": "text",
                "value": "",
                "disabled": true
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"header\": {\n    \"msgType\": \"xdmEntityCreate\",\n    \"msgVersion\": \"1.0\",\n    \"schemaRef\": {\n                \"id\": \"{{EXPEVENTSCHEMAURL}}\",\n                \"contentType\": \"application/vnd.adobe.xed-full+json;version=1.3\"\n            },\n    \"imsOrgId\": \"{{IMS_ORG}}\",\n    \"source\": {\n      \"name\": \"GettingStarted\",\n      \"id\": \"999999\"\n    },\n    \"eventType\": \"mobile_interaction\",\n    \"action\": \"update\",\n    \"createdAt\": \"1524467240\",\n    \"datasetId\": \"{{NEWEXPEVENTDATASETID}}\"\n  },\n  \"body\": {\n    \"xdmMeta\": {\n    \"schemaRef\": {\n                \"id\": \"{{EXPEVENTSCHEMAURL}}\",\n                \"contentType\": \"application/vnd.adobe.xed-full+json;version=1.3\"\n            }\n    },\n    \"xdmEntity\": {\n       \"identityMap\": \n            \t{\n    \t\t\t\"ECID\": [\n        \t\t\t{\n            \t\t\"id\": \"100000000000000000000000{{RUNDESIGNATION}}1\"\n        \t\t\t}\n    \t\t\t]\n\t\t\t\t},\n      \"_id\": \"231\",\n      \"timestamp\": \"2019-02-06T18:23:32Z\",\n      \"marketing\" : {\n    \t\"trackingCode\" : \"purple\"\n\t\t}\n    }\n  }\n}\n"
            },
            "url": "{{STREAMINGENDPOINTID}}"
          },
          "response": []
        }
      ],
      "_postman_id": "14389745-a02c-4719-88fb-f877b002d7a4"
    },
    {
      "name": "Check Batches for Complete",
      "item": [
        {
          "name": "Check ExpEvent Dataset Status",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1570063e-ea92-4ef3-a6b0-3a7243c5fb47",
                "exec": [
                  "if ( pm.environment.get(\"EXPEVENT_DATASET_HAS_BATCH\") == \"yes\")",
                  "    {  ",
                  "    postman.setNextRequest('Check ExpEvent Batch Status');",
                  "    console.log(\"Not checking ExpEvent Dataset again.  We have the Batch ID\")",
                  "    console.log(\"Skipped\");",
                  "    return;",
                  "    }",
                  "",
                  "if ( pm.environment.get(\"EXPEVENTBATCHCREATE\") == \"timeout\")",
                  "    {  ",
                  "    postman.setNextRequest('Check Profile Dataset Status');",
                  "    console.log(\"Not checking ExpEvent Dataset again.  Timeout\")",
                  "    console.log(\"Skipped\");",
                  "    return;",
                  "    }",
                  "",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var json = JSON.parse(responseBody);",
                  "var EXPEVENT_BATCH_ID;",
                  "var EXPEVENT_DATASET_HAS_BATCH;",
                  "",
                  "",
                  "",
                  "for(var firstKey in json);",
                  "    if  ( json[firstKey].lastBatchId !== undefined )",
                  "        {",
                  "        postman.setEnvironmentVariable(\"EXPEVENT_BATCH_ID\", json[firstKey].lastBatchId);",
                  "        tests[\"EXPEVENT_BATCH_ID = \" + json[firstKey].lastBatchId] = true;    ",
                  "        tests[\"BATCH STATUS = \" + json[firstKey].lastBatchStatus] = true;",
                  "        tests[\"IMS Org = \" + json[firstKey].imsOrg] = true; ",
                  "        postman.setEnvironmentVariable(\"EXPEVENT_DATASET_HAS_BATCH\", \"yes\");",
                  "        tests[\"EXPEVENT_DATASET_HAS_BATCH = \" + pm.environment.get(\"EXPEVENT_DATASET_HAS_BATCH\")] = true;         ",
                  "        }",
                  "    else",
                  "    {",
                  "    tests['Need to Check Later. Batch not in Catalog yet for ADLS Landing'] = true; ",
                  "    postman.setNextRequest('Check Profile Dataset Status');",
                  "    postman.setEnvironmentVariable(\"EXPEVENT_DATASET_HAS_BATCH\", \"no\");",
                  "    tests[\"EXPEVENT_DATASET_HAS_BATCH = \" + pm.environment.get(\"EXPEVENT_DATASET_HAS_BATCH\")] = true;    ",
                  "    return;",
                  "    }",
                  "",
                  "var expEventDatasetCreateTime = Date.now() - pm.environment.get(\"EXPEVENTRUNSTART\");",
                  "console.log(\"expEventDatasetCreateTime \" + expEventDatasetCreateTime);",
                  "",
                  "tests[\"Exp Event Start Execute Time = \" + pm.environment.get(\"EXPEVENTRUNSTART\")] = true; ",
                  "tests[\"Exp Event Current Time = \" + Date.now()] = true; ",
                  "tests[\"Exp Event Batch Execute Time = \" + expEventDatasetCreateTime] = true; ",
                  "",
                  "var EXPEVENTBATCHCOMPLETE;",
                  "",
                  "    ",
                  "if (expEventDatasetCreateTime > 60000  ) ",
                  "    {",
                  "        postman.setEnvironmentVariable(\"EXPEVENTBATCHCREATE\", \"timeout\");",
                  "        postman.setEnvironmentVariable(\"EXPEVENTBATCHCOMPLETE\", \"timeout\");",
                  "        tests['EXPEVENTBATCHCREATE = ' + pm.environment.get(\"EXPEVENTBATCHCREATE\")] = false;",
                  "        postman.setNextRequest('Check Profile Dataset Status');",
                  "        tests['EXPEVENT BATCH TO ADLS EXCEEDED 60 Seconds' + expEventDatasetCreateTime] = false;",
                  "    } ",
                  "",
                  "",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4ff73393-175b-4e18-bcbe-c0c2ebbb8ceb",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "f7df331e-b972-4be3-8f33-90eb77e83466",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": {
                "token": "{{ACCESS_TOKEN}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "x-gw-ims-org-id",
                "value": "{{IMS_ORG}}"
              },
              {
                "key": "x-api-key",
                "value": "{{API_KEY}}"
              },
              {
                "key": "x-sandbox-name",
                "value": "",
                "type": "text",
                "disabled": true
              }
            ],
            "url": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/dataset/{{NEWEXPEVENTDATASETID}}"
          },
          "response": []
        },
        {
          "name": "Check ExpEvent Batch Status",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1570063e-ea92-4ef3-a6b0-3a7243c5fb47",
                "exec": [
                  "if ( pm.environment.get(\"EXPEVENT_DATASET_HAS_BATCH\") === \"no\" && pm.environment.get(\"EXPEVENTBATCHCREATE\") != 'timeout' )",
                  "    {  ",
                  "        postman.setNextRequest('Lookup Service Profile via ECID');",
                  "        console.log(\"Skipped\");   ",
                  "        return;",
                  "    }",
                  "if ( pm.environment.get(\"EXPEVENTBATCHCOMPLETE\") !== \"no\")",
                  "    {",
                  "        postman.setNextRequest('Check Profile Dataset Status');",
                  "        console.log(\"Skipped\");",
                  "        return;",
                  "    }",
                  "    ",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var json = JSON.parse(responseBody);",
                  "",
                  "jsonResults:",
                  "for(var firstKey in json)",
                  "{",
                  "    postman.setEnvironmentVariable(\"EXPEVENTBATCHSTATUS\", json[firstKey].status);",
                  "    if (json[firstKey].status === \"failed\")",
                  "    {",
                  "        break jsonResults;",
                  "    }",
                  "}",
                  "//    tests[\"STATUS = \" + json[firstKey].status] = true;",
                  "    tests[\"IMS Org = \" + json[firstKey].imsOrg] = true; ",
                  "",
                  "var expEventExecuteTime = Date.now() - pm.environment.get(\"EXPEVENTRUNSTART\");",
                  "console.log(expEventExecuteTime);",
                  "",
                  "tests[\"Exp Event Start Execute Time = \" + pm.environment.get(\"EXPEVENTRUNSTART\")] = true; ",
                  "tests[\"Exp Event Current Time = \" + Date.now()] = true; ",
                  "tests[\"Exp Event Batch Execute Time = \" + expEventExecuteTime] = true; ",
                  "",
                  "var EXPEVENTBATCHCOMPLETE;",
                  "",
                  "    ",
                  "if (expEventExecuteTime > 60000 && pm.environment.get(\"EXPEVENTBATCHCOMPLETE\") != \"yes\"  ) ",
                  "    {",
                  "        postman.setEnvironmentVariable(\"EXPEVENTBATCHCOMPLETE\", \"timeout\");",
                  "        tests['EXPEVENTBATCHCOMPLETE = ' + pm.environment.get(\"EXPEVENTBATCHCOMPLETE\")] = true;",
                  "        tests['EXPEVENTBATCHSTATUS = ' + pm.environment.get(\"EXPEVENTBATCHSTATUS\")] = true;        ",
                  "        postman.setNextRequest('Check Profile Dataset Status');",
                  "        tests['EXPEVENT BATCH TO ADLS EXCEEDED 60 Seconds'] = false;",
                  "    } else if (json[firstKey].status === \"success\") {",
                  "        postman.setEnvironmentVariable(\"EXPEVENTBATCHCOMPLETE\", \"yes\");",
                  "        tests['EXPEVENTBATCHCOMPLETE = ' + pm.environment.get(\"EXPEVENTBATCHCOMPLETE\")] = true;",
                  "        tests['EXPEVENTBATCHSTATUS = ' + pm.environment.get(\"EXPEVENTBATCHSTATUS\")] = true;     ",
                  "        postman.setNextRequest('Check Profile Dataset Status'); // Check ExpEvent Batch",
                  "    } else if (json[firstKey].status === \"failed\") {",
                  "        postman.setEnvironmentVariable(\"EXPEVENTBATCHCOMPLETE\", \"failed\");",
                  "        tests['EXPEVENTBATCHCOMPLETE = ' + pm.environment.get(\"EXPEVENTBATCHCOMPLETE\")] = false;",
                  "        tests['EXPEVENTBATCHSTATUS = ' + pm.environment.get(\"EXPEVENTBATCHSTATUS\")] = false;     ",
                  "        postman.setNextRequest('Check Profile Dataset Status'); // Check ExpEvent Batch",
                  "    } else {",
                  "        postman.setEnvironmentVariable(\"EXPEVENTBATCHCOMPLETE\", \"no\");",
                  "        tests['EXPEVENTBATCHCOMPLETE = ' + pm.environment.get(\"EXPEVENTBATCHCOMPLETE\")] = true;",
                  "        tests['EXPEVENTBATCHSTATUS = ' + pm.environment.get(\"EXPEVENTBATCHSTATUS\")] = true;     ",
                  "        tests['Need to Check ADLS Again. Time Elapsed for Exp Event ' + expEventExecuteTime] = true;",
                  "        postman.setNextRequest('Check Profile Dataset Status'); ",
                  "    }",
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "70953140-41b2-42d8-84d3-aad130571025",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "515b9726-72fd-4cfe-b11e-4130d9cc5981",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": {
                "token": "{{ACCESS_TOKEN}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "x-gw-ims-org-id",
                "value": "{{IMS_ORG}}"
              },
              {
                "key": "x-api-key",
                "value": "{{API_KEY}}"
              },
              {
                "key": "x-sandbox-name",
                "value": "",
                "type": "text",
                "disabled": true
              }
            ],
            "url": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/batches/{{EXPEVENT_BATCH_ID}}"
          },
          "response": []
        },
        {
          "name": "Check Profile Dataset Status",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1570063e-ea92-4ef3-a6b0-3a7243c5fb47",
                "exec": [
                  "if ( pm.environment.get(\"PROFILE_DATASET_HAS_BATCH\") == \"yes\")",
                  "    {  ",
                  "    postman.setNextRequest('Check Profile Batch Status');",
                  "    console.log(\"Not checking Profile Dataset again.  We have the Batch ID\")",
                  "    console.log(\"Skipped\");",
                  "    return;",
                  "    }",
                  "",
                  "if ( pm.environment.get(\"PROFILEBATCHCREATE\") == \"timeout\")",
                  "    {  ",
                  "    postman.setNextRequest('Lookup Service Profile via ECID');",
                  "    console.log(\"Not checking Profile Dataset again.  Timeout\")",
                  "    console.log(\"Skipped\");",
                  "    return;",
                  "    }",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var json = JSON.parse(responseBody);",
                  "var PROFILE_BATCH_ID;",
                  "var PROFILE_DATASET_HAS_BATCH;",
                  "",
                  "for(var firstKey in json);",
                  "    if  ( json[firstKey].lastBatchId !== undefined )",
                  "        {",
                  "        postman.setEnvironmentVariable(\"PROFILE_BATCH_ID\", json[firstKey].lastBatchId);",
                  "        tests[\"PROFILE_BATCH_ID = \" + json[firstKey].lastBatchId] = true;    ",
                  "        tests[\"BATCH STATUS = \" + json[firstKey].lastBatchStatus] = true;",
                  "        tests[\"IMS Org = \" + json[firstKey].imsOrg] = true; ",
                  "        postman.setEnvironmentVariable(\"PROFILE_DATASET_HAS_BATCH\", \"yes\");",
                  "        tests[\"PROFILE_DATASET_HAS_BATCH = \" + pm.environment.get(\"PROFILE_DATASET_HAS_BATCH\")] = true; ",
                  "    } ",
                  "    else",
                  "    {",
                  "        tests['Need to Check Later. Batch not in Catalog yet for ADLS Landing'] = true; ",
                  "        postman.setNextRequest('Lookup Service Profile via ECID');",
                  "        postman.setEnvironmentVariable(\"PROFILE_DATASET_HAS_BATCH\", \"no\");",
                  "        tests[\"PROFILE_DATASET_HAS_BATCH = \" + pm.environment.get(\"PROFILE_DATASET_HAS_BATCH\")] = true;   ",
                  "        return;",
                  "    }",
                  "",
                  "var profileDatasetCreateTime = Date.now() - pm.environment.get(\"PROFILERUNSTART\");",
                  "console.log(\"profileDatasetCreateTime \" + profileDatasetCreateTime);",
                  "",
                  "tests[\"Profile Start Execute Time = \" + pm.environment.get(\"PROFILERUNSTART\")] = true; ",
                  "tests[\"Profile Current Time = \" + Date.now()] = true; ",
                  "tests[\"Profile Batch Execute Time = \" + profileDatasetCreateTime] = true; ",
                  "",
                  "var PROFILEBATCHCOMPLETE;",
                  "",
                  "    ",
                  "if (profileDatasetCreateTime > 60000  ) ",
                  "    {",
                  "        postman.setEnvironmentVariable(\"PROFILEBATCHCREATE\", \"timeout\");",
                  "        postman.setEnvironmentVariable(\"PROFILEBATCHCOMPLETE\", \"timeout\");",
                  "        tests['PROFILEBATCHCREATE = ' + pm.environment.get(\"PROFILEBATCHCREATE\")] = false;",
                  "        postman.setNextRequest('Lookup Service Profile via ECID');",
                  "        tests['PROFILE BATCH TO ADLS EXCEEDED 60 Seconds' + profileDatasetCreateTime] = false;",
                  "    } ",
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "5e1461b8-5553-4db3-aae0-23541393c914",
                "exec": [
                  "if ( pm.environment.get(\"PROFILE_DATASET_HAS_BATCH\") == \"yes\")",
                  "    {  ",
                  "    postman.setNextRequest('Check Profile Batch Status');",
                  "    console.log(\"Not checking Profile Dataset again.  We have the Batch ID\")    ",
                  "    return;",
                  "    }"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "5008eea0-6d8c-478f-bae9-3823cda092f4",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": {
                "token": "{{ACCESS_TOKEN}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "x-gw-ims-org-id",
                "value": "{{IMS_ORG}}"
              },
              {
                "key": "x-api-key",
                "value": "{{API_KEY}}"
              },
              {
                "key": "x-sandbox-name",
                "value": "",
                "type": "text",
                "disabled": true
              }
            ],
            "url": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/dataset/{{NEWPROFILEDATASETID}}"
          },
          "response": []
        },
        {
          "name": "Check Profile Batch Status",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1570063e-ea92-4ef3-a6b0-3a7243c5fb47",
                "exec": [
                  "if ( pm.environment.get(\"PROFILE_DATASET_HAS_BATCH\") === \"no\" && pm.environment.get(\"PROFILEBATCHCREATE\") != 'timeout' )",
                  "    {  ",
                  "        postman.setNextRequest('Lookup Service Profile via ECID');",
                  "        console.log(\"Skipped\");",
                  "        return;",
                  "    }",
                  "if ( pm.environment.get(\"PROFILEBATCHCOMPLETE\") !== \"no\")",
                  "    {",
                  "        postman.setNextRequest('Lookup Service Profile via ECID');",
                  "        console.log(\"Skipped\");",
                  "        return;",
                  "    }",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var json = JSON.parse(responseBody);",
                  "",
                  "jsonResults:",
                  "for(var firstKey in json)",
                  "{",
                  "    postman.setEnvironmentVariable(\"PROFILEBATCHSTATUS\", json[firstKey].status);",
                  "    if (json[firstKey].status === \"failed\")",
                  "    {",
                  "        break jsonResults;",
                  "    }",
                  "}",
                  "",
                  "//    tests[\"STATUS = \" + json[firstKey].status] = true;",
                  "    tests[\"IMS Org = \" + json[firstKey].imsOrg] = true; ",
                  "",
                  "var profileExecuteTime = Date.now() - pm.environment.get(\"PROFILERUNSTART\");",
                  "console.log(profileExecuteTime);",
                  "",
                  "tests[\"PROFILE Start Execute Time = \" + pm.environment.get(\"PROFILERUNSTART\")] = true; ",
                  "tests[\"PROFILE Current Time = \" + Date.now()] = true; ",
                  "tests[\"PROFILE Batch Execute Time = \" + profileExecuteTime] = true;",
                  "",
                  "var PROFILEBATCHCOMPLETE;",
                  "",
                  "if (profileExecuteTime > 60000 && pm.environment.get(\"PROFILEBATCHCOMPLETE\") != \"yes\") ",
                  "    {",
                  "        tests['PROFILE BATCH TO ADLS EXCEEDED 60 Seconds'] = false;",
                  "        postman.setEnvironmentVariable(\"PROFILEBATCHCOMPLETE\", \"timeout\");",
                  "        tests['PROFILEBATCHCOMPLETE = ' + pm.environment.get(\"PROFILEBATCHCOMPLETE\")] = true;",
                  "        tests['PROFILEBATCHSTATUS = ' + pm.environment.get(\"PROFILEBATCHSTATUS\")] = true;",
                  "        postman.setNextRequest('Lookup Service Profile via ECID');",
                  "    } else if (pm.environment.get(\"PROFILEBATCHSTATUS\") === \"success\") {",
                  "        postman.setEnvironmentVariable(\"PROFILEBATCHCOMPLETE\", \"yes\");",
                  "        tests['PROFILEBATCHCOMPLETE = ' + pm.environment.get(\"PROFILEBATCHCOMPLETE\")] = true;",
                  "        tests['PROFILEBATCHSTATUS = ' + pm.environment.get(\"PROFILEBATCHSTATUS\")] = true;",
                  "        postman.setNextRequest('Lookup Service Profile via ECID'); // Check ExpEvent Batch",
                  "    } else if (pm.environment.get(\"PROFILEBATCHSTATUS\") === \"failed\") {",
                  "        postman.setEnvironmentVariable(\"EXPEVENTBATCHCOMPLETE\", \"failed\");",
                  "        tests['PROFILEBATCHCOMPLETE = ' + pm.environment.get(\"PROFILEBATCHCOMPLETE\")] = false;",
                  "        tests['PROFILEBATCHSTATUS = ' + pm.environment.get(\"PROFILEBATCHSTATUS\")] = false;",
                  "        postman.setNextRequest('Lookup Service Profile via ECID'); // Check ExpEvent Batch",
                  "    } else {",
                  "        postman.setEnvironmentVariable(\"PROFILEBATCHCOMPLETE\", \"no\");",
                  "        tests['PROFILEBATCHCOMPLETE = ' + pm.environment.get(\"PROFILEBATCHCOMPLETE\")] = true;",
                  "        tests['PROFILEBATCHSTATUS = ' + pm.environment.get(\"PROFILEBATCHSTATUS\")] = true;        ",
                  "        tests['Need to Check ADLS Again. Time Elapsed for Exp Event ' + profileExecuteTime] = true;",
                  "        postman.setNextRequest('Lookup Service Profile via ECID'); ",
                  "    }",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "8115d353-0bd2-400c-8bdd-ebcd58380dbd",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "ad1d1217-d7c8-4455-b29f-1248c6cbb1c3",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": {
                "token": "{{ACCESS_TOKEN}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "x-gw-ims-org-id",
                "value": "{{IMS_ORG}}"
              },
              {
                "key": "x-api-key",
                "value": "{{API_KEY}}"
              },
              {
                "key": "x-sandbox-name",
                "value": "",
                "type": "text",
                "disabled": true
              }
            ],
            "url": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/batches/{{PROFILE_BATCH_ID}}"
          },
          "response": []
        }
      ],
      "_postman_id": "ece6943c-5c16-4ba7-92ab-105763389a58"
    },
    {
      "name": "Lookup Service - Profile and Exp Events",
      "item": [
        {
          "name": "Lookup Service Profile via ECID",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a23b558f-bd67-4fa6-8984-57df74154b92",
                "exec": [
                  "if ( pm.environment.get(\"profileToLookupECIDComplete\") != \"no\")",
                  "    {  ",
                  "    postman.setNextRequest('Lookup Service ExpEvents ECID');",
                  "    console.log(\"Skipped\");",
                  "    return;",
                  "    }",
                  "",
                  "var profileToLookupExecuteTime;",
                  "profileToLookupExecuteTime = Date.now() - pm.environment.get(\"PROFILERUNSTART\");",
                  "tests[\"PROFILE Start Execute Time = \" + pm.environment.get(\"PROFILERUNSTART\")] = true; ",
                  "tests[\"PROFILE Current Time = \" + Date.now()] = true; ",
                  "tests[\"PROFILE to Lookup Execute Time = \" + profileToLookupExecuteTime] = true; ",
                  "",
                  "if (profileToLookupExecuteTime > 60000 && (responseCode.code === 200 || responseCode.code === 404) ) ",
                  "    {",
                  "        tests['PROFILE BATCH TO Profile Service EXCEEDED 60 Seconds'] = false;",
                  "        postman.setEnvironmentVariable(\"profileToLookupECIDComplete\", \"fail\");",
                  "        tests['profileToLookupECIDComplete = ' + pm.environment.get(\"profileToLookupECIDComplete\")] = false;",
                  "        postman.setNextRequest('Lookup Service ExpEvents ECID');",
                  "    } else if ( responseCode.code === 200 ) {",
                  "        postman.setEnvironmentVariable(\"profileToLookupECIDComplete\", \"yes\");",
                  "        tests['profileToLookupECIDComplete = ' + pm.environment.get(\"profileToLookupECIDComplete\")] = true;",
                  "        postman.setNextRequest('Lookup Service ExpEvents ECID'); // Check ExpEvent Batch",
                  "    } else if ( responseCode.code === 404 ){",
                  "        postman.setNextRequest('Lookup Service ExpEvents ECID');",
                  "        postman.setEnvironmentVariable(\"profileToLookupECIDComplete\", \"no\");",
                  "        tests['profileToLookupECIDComplete = ' + pm.environment.get(\"profileToLookupECIDComplete\")] = true;",
                  "        tests['Checking Again. Time Elapsed for Exp Event ' + profileToLookupExecuteTime] = true;",
                  "    } else if ( responseCode.code === 500 ){",
                  "        postman.setNextRequest('Lookup Service ExpEvents ECID');",
                  "        postman.setEnvironmentVariable(\"profileToLookupECIDComplete\", \"no\");",
                  "        tests['profileToLookupECIDComplete = ' + pm.environment.get(\"profileToLookupECIDComplete\")] = true;",
                  "        tests['Checking Again. Lookup 500 Response Code issue ' + profileToLookupExecuteTime] = true;",
                  "    } else {",
                  "        tests['Not sure what happened. move on ' + profileToLookupExecuteTime] = true;",
                  "        postman.setEnvironmentVariable(\"profileToLookupECIDComplete\", \"unknown\");",
                  "        tests['profileToLookupECIDComplete = ' + pm.environment.get(\"profileToLookupECIDComplete\")] = true;",
                  "        postman.setNextRequest('Lookup Service ExpEvents ECID');",
                  "    }",
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "ba214188-51b0-4cba-a7b1-81d12a663818",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "4c191565-a4ee-42df-b202-123a7395bcd9",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": {
                "token": "{{ACCESS_TOKEN}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{API_KEY}}"
              },
              {
                "key": "x-gw-ims-org-id",
                "value": "{{IMS_ORG}}"
              },
              {
                "key": "x-sandbox-name",
                "value": "",
                "type": "text",
                "disabled": true
              }
            ],
            "url": {
              "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/access/entities?schema.name=_xdm.context.profile&entityId=100000000000000000000000{{RUNDESIGNATION}}1&entityIdNS=ECID&limit=10",
              "protocol": "https",
              "host": [
                "{{PLATFORM_GATEWAY}}"
              ],
              "path": [
                "data",
                "core",
                "ups",
                "access",
                "entities"
              ],
              "query": [
                {
                  "key": "schema.name",
                  "value": "_xdm.context.profile"
                },
                {
                  "key": "relatedSchema.name",
                  "value": "_xdm.context.profile",
                  "disabled": true
                },
                {
                  "key": "entityId",
                  "value": "100000000000000000000000{{RUNDESIGNATION}}1"
                },
                {
                  "key": "entityIdNS",
                  "value": "ECID"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Lookup Service ExpEvents ECID",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a23b558f-bd67-4fa6-8984-57df74154b92",
                "exec": [
                  "if ( pm.environment.get(\"expEventToLookupECIDComplete\") != \"no\")",
                  "    {  ",
                  "    postman.setNextRequest('Identity Service ECID mapping');",
                  "    console.log(\"Skipped\");",
                  "    return;",
                  "    }",
                  "",
                  "var expEventToLookupExecuteTime;",
                  "expEventToLookupExecuteTime = Date.now() - pm.environment.get(\"EXPEVENTRUNSTART\");",
                  "tests[\"ExpEvent Start Execute Time = \" + pm.environment.get(\"EXPEVENTRUNSTART\")] = true; ",
                  "tests[\"ExpEvent Current Time = \" + Date.now()] = true; ",
                  "tests[\"ExpEvent to Lookup Execute Time = \" + expEventToLookupExecuteTime] = true; ",
                  "",
                  "if (expEventToLookupExecuteTime > 60000 && (responseCode.code === 200 || responseCode.code === 404) ) ",
                  "    {",
                  "        tests['EXPEVENT BATCH TO Profile Service EXCEEDED 60 Seconds'] = false;",
                  "        postman.setEnvironmentVariable(\"expEventToLookupECIDComplete\", \"fail\");",
                  "        tests['expEventToLookupECIDComplete = ' + pm.environment.get(\"expEventToLookupECIDComplete\")] = false;",
                  "        postman.setNextRequest('Identity Service ECID mapping');",
                  "    } else if ( responseCode.code === 200 ) {",
                  "        postman.setEnvironmentVariable(\"expEventToLookupECIDComplete\", \"yes\");",
                  "        tests['expEventToLookupECIDComplete = ' + pm.environment.get(\"expEventToLookupECIDComplete\")] = true;",
                  "        postman.setNextRequest('Identity Service ECID mapping'); // Check ExpEvent Batch",
                  "    } else if ( responseCode.code === 404 ){",
                  "        postman.setNextRequest('Identity Service ECID mapping');",
                  "        postman.setEnvironmentVariable(\"expEventToLookupECIDComplete\", \"no\");",
                  "        tests['expEventToLookupECIDComplete = ' + pm.environment.get(\"expEventToLookupECIDComplete\")] = true;",
                  "        tests['Checking Again. Time Elapsed for Exp Event ' + expEventToLookupExecuteTime] = true;",
                  "    } else if ( responseCode.code === 500 ){",
                  "        postman.setNextRequest('Identity Service ECID mapping');",
                  "        postman.setEnvironmentVariable(\"expEventToLookupECIDComplete\", \"no\");",
                  "        tests['expEventToLookupECIDComplete = ' + pm.environment.get(\"expEventToLookupECIDComplete\")] = true;",
                  "        tests['Checking Again. Lookup 500 Response Code issue ' + expEventToLookupExecuteTime] = true;",
                  "    } else {",
                  "        tests['Not sure what happened. move on ' + expEventToLookupExecuteTime] = true;",
                  "        postman.setEnvironmentVariable(\"expEventToLookupECIDComplete\", \"unknown\");",
                  "        tests['expEventToLookupECIDComplete = ' + pm.environment.get(\"expEventToLookupECIDComplete\")] = true;",
                  "        postman.setNextRequest('Identity Service ECID mapping');",
                  "    }",
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "15ff70f0-b097-42b5-9c44-ffb92fa53c2d",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "112a6921-2b65-47b8-8f88-13b0efaa24c2",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": {
                "token": "{{ACCESS_TOKEN}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{API_KEY}}"
              },
              {
                "key": "x-gw-ims-org-id",
                "value": "{{IMS_ORG}}"
              },
              {
                "key": "x-sandbox-name",
                "value": "",
                "type": "text",
                "disabled": true
              }
            ],
            "url": {
              "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/access/entities?schema.name=_xdm.context.experienceevent&relatedSchema.name=_xdm.context.profile&relatedEntityId=100000000000000000000000{{RUNDESIGNATION}}1&relatedEntityIdNS=ECID&limit=10",
              "protocol": "https",
              "host": [
                "{{PLATFORM_GATEWAY}}"
              ],
              "path": [
                "data",
                "core",
                "ups",
                "access",
                "entities"
              ],
              "query": [
                {
                  "key": "schema.name",
                  "value": "_xdm.context.experienceevent"
                },
                {
                  "key": "relatedSchema.name",
                  "value": "_xdm.context.profile"
                },
                {
                  "key": "relatedEntityId",
                  "value": "100000000000000000000000{{RUNDESIGNATION}}1"
                },
                {
                  "key": "relatedEntityIdNS",
                  "value": "ECID"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Lookup Service Profile CRMID",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a23b558f-bd67-4fa6-8984-57df74154b92",
                "exec": [
                  "var json = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"AUTHORIZATION_TOKEN\", json.access_token);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "655e7daf-5df3-4d6e-a246-b2aaf10ab053",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": {
                "token": "{{ACCESS_TOKEN}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{API_KEY}}"
              },
              {
                "key": "x-gw-ims-org-id",
                "value": "{{IMS_ORG}}"
              },
              {
                "key": "x-sandbox-name",
                "value": "",
                "type": "text",
                "disabled": true
              }
            ],
            "url": {
              "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/access/entities?schema.name=_xdm.context.profile&entityId={{RUNDESIGNATION}}prorecords&entityIdNS=CRMID",
              "protocol": "https",
              "host": [
                "{{PLATFORM_GATEWAY}}"
              ],
              "path": [
                "data",
                "core",
                "ups",
                "access",
                "entities"
              ],
              "query": [
                {
                  "key": "schema.name",
                  "value": "_xdm.context.profile"
                },
                {
                  "key": "entityId",
                  "value": "{{RUNDESIGNATION}}prorecords"
                },
                {
                  "key": "entityIdNS",
                  "value": "CRMID"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Lookup Service ExpEvent CRMID",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a23b558f-bd67-4fa6-8984-57df74154b92",
                "exec": [
                  "var json = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"AUTHORIZATION_TOKEN\", json.access_token);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "3aebeca3-3673-41e1-b2ab-ce566de0300e",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": {
                "token": "{{ACCESS_TOKEN}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{API_KEY}}"
              },
              {
                "key": "x-gw-ims-org-id",
                "value": "{{IMS_ORG}}"
              },
              {
                "key": "x-sandbox-name",
                "value": "",
                "type": "text",
                "disabled": true
              }
            ],
            "url": {
              "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/access/entities?schema.name=_xdm.context.experienceevent&relatedSchema.name=_xdm.context.profile&relatedEntityId={{RUNDESIGNATION}}prorecords&relatedEntityIdNS=CRMID",
              "protocol": "https",
              "host": [
                "{{PLATFORM_GATEWAY}}"
              ],
              "path": [
                "data",
                "core",
                "ups",
                "access",
                "entities"
              ],
              "query": [
                {
                  "key": "schema.name",
                  "value": "_xdm.context.experienceevent"
                },
                {
                  "key": "relatedSchema.name",
                  "value": "_xdm.context.profile"
                },
                {
                  "key": "relatedEntityId",
                  "value": "{{RUNDESIGNATION}}prorecords"
                },
                {
                  "key": "relatedEntityIdNS",
                  "value": "CRMID"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Lookup Service Profile Email",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a23b558f-bd67-4fa6-8984-57df74154b92",
                "exec": [
                  "var json = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"AUTHORIZATION_TOKEN\", json.access_token);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "14c4a236-67de-4227-ab01-850c517c2344",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": {
                "token": "{{ACCESS_TOKEN}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{API_KEY}}"
              },
              {
                "key": "x-gw-ims-org-id",
                "value": "{{IMS_ORG}}"
              },
              {
                "key": "x-sandbox-name",
                "value": "golden-data-test",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{PLATFORM_GATEWAY}}/data/core/ups/access/entities?schema.name=_xdm.context.profile&entityId=brunomars@adobe.com&entityIdNS=Email",
              "host": [
                "{{PLATFORM_GATEWAY}}"
              ],
              "path": [
                "data",
                "core",
                "ups",
                "access",
                "entities"
              ],
              "query": [
                {
                  "key": "schema.name",
                  "value": "_xdm.context.profile"
                },
                {
                  "key": "entityId",
                  "value": "brunomars@adobe.com"
                },
                {
                  "key": "entityIdNS",
                  "value": "Email"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Lookup Service ExpEvent Email",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a23b558f-bd67-4fa6-8984-57df74154b92",
                "exec": [
                  "var json = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"AUTHORIZATION_TOKEN\", json.access_token);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "7f831ceb-7eda-4731-8450-fcab5233acae",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": {
                "token": "{{ACCESS_TOKEN}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{API_KEY}}"
              },
              {
                "key": "x-gw-ims-org-id",
                "value": "{{IMS_ORG}}"
              },
              {
                "key": "x-sandbox-name",
                "value": "",
                "type": "text",
                "disabled": true
              }
            ],
            "url": {
              "raw": "https://{{PLATFORM_GATEWAY}}/data/core/ups/access/entities?schema.name=_xdm.context.experienceevent&relatedSchema.name=_xdm.context.profile&relatedEntityId=prorecords{{RUNDESIGNATION}}@adobe.com&relatedEntityIdNS=Email",
              "protocol": "https",
              "host": [
                "{{PLATFORM_GATEWAY}}"
              ],
              "path": [
                "data",
                "core",
                "ups",
                "access",
                "entities"
              ],
              "query": [
                {
                  "key": "schema.name",
                  "value": "_xdm.context.experienceevent"
                },
                {
                  "key": "relatedSchema.name",
                  "value": "_xdm.context.profile"
                },
                {
                  "key": "relatedEntityId",
                  "value": "prorecords{{RUNDESIGNATION}}@adobe.com"
                },
                {
                  "key": "relatedEntityIdNS",
                  "value": "Email"
                }
              ]
            }
          },
          "response": []
        }
      ],
      "_postman_id": "4d1583a2-c372-4b68-ae65-6f0d161d0217"
    },
    {
      "name": "User Graph - Check Identity Service",
      "item": [
        {
          "name": "Identity Service CRMID mapping",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a23b558f-bd67-4fa6-8984-57df74154b92",
                "exec": [
                  "var json = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"AUTHORIZATION_TOKEN\", json.access_token);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "d95f6280-542f-4e4c-ad6a-3676064c52aa",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": {
                "token": "{{ACCESS_TOKEN}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{API_KEY}}"
              },
              {
                "key": "x-gw-ims-org-id",
                "value": "{{IMS_ORG}}"
              },
              {
                "key": "x-sandbox-name",
                "value": "",
                "type": "text",
                "disabled": true
              }
            ],
            "url": {
              "raw": "https://{{PLATFORM_GATEWAY}}/data/core/identity/cluster/members?id={{RUNDESIGNATION}}prorecords&nsid=85919",
              "protocol": "https",
              "host": [
                "{{PLATFORM_GATEWAY}}"
              ],
              "path": [
                "data",
                "core",
                "identity",
                "cluster",
                "members"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{RUNDESIGNATION}}prorecords"
                },
                {
                  "key": "nsid",
                  "value": "85919"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Identity Service ECID mapping",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a23b558f-bd67-4fa6-8984-57df74154b92",
                "exec": [
                  "if (pm.environment.get(\"EXPEVENTBATCHCOMPLETE\") !== \"no\" &&",
                  "    pm.environment.get(\"PROFILEBATCHCOMPLETE\") !== \"no\" &&",
                  "    pm.environment.get(\"profileToLookupECIDComplete\") !== \"no\" &&",
                  "    pm.environment.get(\"expEventToLookupECIDComplete\") !== \"no\" &&",
                  "    pm.environment.get(\"profileToIdentityECIDComplete\") !== \"no\"",
                  "    )",
                  "    {",
                  "    console.log(\"EXPEVENTBATCHCOMPLETE \" + pm.environment.get(\"EXPEVENTBATCHCOMPLETE\"));",
                  "    console.log(\"PROFILEBATCHCOMPLETE \" + pm.environment.get(\"PROFILEBATCHCOMPLETE\"));",
                  "    console.log(\"profileToLookupECIDComplete \" + pm.environment.get(\"profileToLookupECIDComplete\"));",
                  "    console.log(\"expEventToLookupECIDComplete \" + pm.environment.get(\"expEventToLookupECIDComplete\"));",
                  "    console.log(\"profileToIdentityECIDComplete \" + pm.environment.get(\"profileToIdentityECIDComplete\"));    ",
                  "    postman.setNextRequest('Cleanup ExpEvent Dataset');",
                  "    console.log(\"Moving to Cleanup\");",
                  "    return;",
                  "    }",
                  "    else {",
                  "    console.log(\"EXPEVENTBATCHCOMPLETE \" + pm.environment.get(\"EXPEVENTBATCHCOMPLETE\"));",
                  "    console.log(\"PROFILEBATCHCOMPLETE \" + pm.environment.get(\"PROFILEBATCHCOMPLETE\"));",
                  "    console.log(\"profileToLookupECIDComplete \" + pm.environment.get(\"profileToLookupECIDComplete\"));",
                  "    console.log(\"expEventToLookupECIDComplete \" + pm.environment.get(\"expEventToLookupECIDComplete\"));",
                  "    console.log(\"profileToIdentityECIDComplete \" + pm.environment.get(\"profileToIdentityECIDComplete\"));   ",
                  "    }",
                  "",
                  "if ( pm.environment.get(\"profileToIdentityECIDComplete\") !== \"no\")",
                  "    {",
                  "        postman.setNextRequest('Check ExpEvent Dataset Status');",
                  "        console.log(\"Skipped\");",
                  "        setTimeout(function () {console.log(\"Looping again\")}, 5000);",
                  "        return;",
                  "    }",
                  "",
                  "setTimeout()",
                  "",
                  "var profileToIdentityExecuteTime;",
                  "profileToIdentityExecuteTime = Date.now() - pm.environment.get(\"PROFILERUNSTART\");",
                  "tests[\"Identity Start Execute Time = \" + pm.environment.get(\"PROFILERUNSTART\")] = true; ",
                  "tests[\"Identity Current Time = \" + Date.now()] = true; ",
                  "tests[\"Identity to Lookup Execute Time = \" + profileToIdentityExecuteTime] = true; ",
                  "",
                  "if (profileToIdentityExecuteTime > 60000 && (responseCode.code === 200) ) ",
                  "    {",
                  "        tests['PROFILE BATCH TO IDENTITY EXCEEDED 60 Seconds'] = false;",
                  "        postman.setEnvironmentVariable(\"profileToIdentityECIDComplete\", \"fail\");",
                  "        tests['profileToIdentityECIDComplete = ' + pm.environment.get(\"profileToIdentityECIDComplete\")] = false;",
                  "    } else if ( responseCode.code === 200 ) {",
                  "        postman.setEnvironmentVariable(\"profileToIdentityECIDComplete\", \"yes\");",
                  "        tests['profileToIdentityECIDComplete = ' + pm.environment.get(\"profileToIdentityECIDComplete\")] = true;",
                  "    } else if ( responseCode.code === 404 ){",
                  "        postman.setEnvironmentVariable(\"profileToIdentityECIDComplete\", \"no\");",
                  "        tests['profileToIdentityECIDComplete = ' + pm.environment.get(\"profileToIdentityECIDComplete\")] = true;",
                  "        tests['Checking Again. Time Elapsed for Identity Record ' + profileToIdentityExecuteTime] = true;",
                  "    } else if ( responseCode.code === 500 ){",
                  "        postman.setEnvironmentVariable(\"profileToIdentityECIDComplete\", \"no\");",
                  "        tests['profileToIdentityECIDComplete = ' + pm.environment.get(\"profileToIdentityECIDComplete\")] = true;",
                  "        tests['Checking Again. Lookup 500 Response Code issue ' + profileToIdentityExecuteTime] = true;",
                  "    } else {",
                  "        tests['Not sure what happened. move on ' + profileToIdentityExecuteTime] = true;",
                  "        postman.setEnvironmentVariable(\"profileToIdentityECIDComplete\", \"unknown\");",
                  "        tests['profileToIdentityECIDComplete = ' + pm.environment.get(\"profileToIdentityECIDComplete\")] = true;",
                  "    }",
                  "",
                  "if (pm.environment.get(\"EXPEVENTBATCHCOMPLETE\") !== \"no\" &&",
                  "    pm.environment.get(\"PROFILEBATCHCOMPLETE\") !== \"no\" &&",
                  "    pm.environment.get(\"profileToLookupECIDComplete\") !== \"no\" &&",
                  "    pm.environment.get(\"expEventToLookupECIDComplete\") !== \"no\" &&",
                  "    pm.environment.get(\"expEventToIdentityECIDComplete\") !== \"no\"",
                  "    )",
                  "    {",
                  "    console.log(\"EXPEVENTBATCHCOMPLETE \" + pm.environment.get(\"EXPEVENTBATCHCOMPLETE\"));",
                  "    console.log(\"PROFILEBATCHCOMPLETE \" + pm.environment.get(\"PROFILEBATCHCOMPLETE\"));",
                  "    console.log(\"profileToLookupECIDComplete\" + pm.environment.get(\"profileToLookupECIDComplete\"));",
                  "    console.log(\"expEventToLookupECIDComplete\" + pm.environment.get(\"expEventToLookupECIDComplete\"));",
                  "    console.log(\"profileToIdentityECIDComplete\" + pm.environment.get(\"profileToIdentityECIDComplete\"));      ",
                  "    postman.setNextRequest('Cleanup ExpEvent Dataset');",
                  "    console.log(\"Moving to Cleanup\");",
                  "    return;",
                  "    }",
                  "    else {",
                  "    console.log(\"EXPEVENTBATCHCOMPLETE \" + pm.environment.get(\"EXPEVENTBATCHCOMPLETE\"));",
                  "    console.log(\"PROFILEBATCHCOMPLETE \" + pm.environment.get(\"PROFILEBATCHCOMPLETE\"));",
                  "    console.log(\"profileToLookupECIDComplete \" + pm.environment.get(\"profileToLookupECIDComplete\"));",
                  "    console.log(\"expEventToLookupECIDComplete \" + pm.environment.get(\"expEventToLookupECIDComplete\"));",
                  "    console.log(\"profileToIdentityECIDComplete \" + pm.environment.get(\"profileToIdentityECIDComplete\"));   ",
                  "    postman.setNextRequest('Check ExpEvent Dataset Status');    ",
                  "    ",
                  "    setTimeout(function () {console.log(\"Looping again\")}, 5000);",
                  "    }",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4af55f17-9cec-405d-8e80-3e751c06912d",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "bb56290f-d435-47cd-a9ca-e681bc99d541",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{API_KEY}}"
              },
              {
                "key": "x-gw-ims-org-id",
                "value": "{{IMS_ORG}}"
              },
              {
                "key": "x-sandbox-name",
                "value": "",
                "type": "text",
                "disabled": true
              }
            ],
            "url": {
              "raw": "https://{{PLATFORM_GATEWAY}}/data/core/identity/cluster/members?id=100000000000000000000000{{RUNDESIGNATION}}1&nsid=4",
              "protocol": "https",
              "host": [
                "{{PLATFORM_GATEWAY}}"
              ],
              "path": [
                "data",
                "core",
                "identity",
                "cluster",
                "members"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "100000000000000000000000{{RUNDESIGNATION}}1"
                },
                {
                  "key": "nsid",
                  "value": "4"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Identity Service Email mapping",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a23b558f-bd67-4fa6-8984-57df74154b92",
                "exec": [
                  "var json = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"AUTHORIZATION_TOKEN\", json.access_token);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "133c1bb7-373b-4b09-b2bf-ce463dde22f2",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{API_KEY}}"
              },
              {
                "key": "x-gw-ims-org-id",
                "value": "{{IMS_ORG}}"
              },
              {
                "key": "x-sandbox-name",
                "value": "",
                "type": "text",
                "disabled": true
              }
            ],
            "url": {
              "raw": "https://{{PLATFORM_GATEWAY}}/data/core/identity/cluster/members?id=prorecords{{RUNDESIGNATION}}@adobe.com&nsid=6",
              "protocol": "https",
              "host": [
                "{{PLATFORM_GATEWAY}}"
              ],
              "path": [
                "data",
                "core",
                "identity",
                "cluster",
                "members"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "prorecords{{RUNDESIGNATION}}@adobe.com"
                },
                {
                  "key": "nsid",
                  "value": "6"
                }
              ]
            }
          },
          "response": []
        }
      ],
      "_postman_id": "18c3a649-1b34-46b8-8017-b2503a4d5557"
    },
    {
      "name": "Cleanup",
      "item": [
        {
          "name": "Cleanup ExpEvent Dataset",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1570063e-ea92-4ef3-a6b0-3a7243c5fb47",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4ff73393-175b-4e18-bcbe-c0c2ebbb8ceb",
                "exec": [
                  "if ( pm.environment.get(\"EXPEVENTBATCHCOMPLETE\") === \"fail\")",
                  "    {  ",
                  "    console.log(\"Not deleting Dataset.  Data does not appear in ADLS in 60 seconds\")",
                  "    postman.setNextRequest('Cleanup Profile Dataset');",
                  "    return;",
                  "    }"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "3decbf58-8859-43f8-b41e-686601c99914",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": {
                "token": "{{ACCESS_TOKEN}}"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "x-gw-ims-org-id",
                "value": "{{IMS_ORG}}"
              },
              {
                "key": "x-api-key",
                "value": "{{API_KEY}}"
              },
              {
                "key": "x-sandbox-name",
                "value": "",
                "type": "text",
                "disabled": true
              }
            ],
            "url": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/dataset/{{NEWEXPEVENTDATASETID}}"
          },
          "response": []
        },
        {
          "name": "Cleanup ExpEvent Schema",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1570063e-ea92-4ef3-a6b0-3a7243c5fb47",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4ff73393-175b-4e18-bcbe-c0c2ebbb8ceb",
                "exec": [
                  "if ( pm.environment.get(\"EXPEVENTBATCHCOMPLETE\") === \"fail\")",
                  "    {  ",
                  "    console.log(\"Not deleting Dataset.  Data does not appear in ADLS in 60 seconds\")",
                  "    postman.setNextRequest('Cleanup Profile Dataset');",
                  "    return;",
                  "    }"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "d1c57990-6ff6-42ec-b76e-e7bad5c8a931",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": {
                "token": "{{ACCESS_TOKEN}}"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "x-gw-ims-org-id",
                "value": "{{IMS_ORG}}"
              },
              {
                "key": "x-api-key",
                "value": "{{API_KEY}}"
              },
              {
                "key": "x-sandbox-name",
                "value": "",
                "type": "text",
                "disabled": true
              }
            ],
            "url": "https://{{PLATFORM_GATEWAY}}/data/foundation/schemaregistry/tenant/schemas/{{EXPEVENTSCHEMAID}}"
          },
          "response": []
        },
        {
          "name": "Cleanup Profile Dataset",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1570063e-ea92-4ef3-a6b0-3a7243c5fb47",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "5e1461b8-5553-4db3-aae0-23541393c914",
                "exec": [
                  "if ( pm.environment.get(\"PROFILEBATCHCOMPLETE\") === \"fail\")",
                  "    {  ",
                  "    console.log(\"Not deleting Dataset.  Data does not appear in ADLS in 60 seconds\")",
                  "    return;",
                  "    }"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "59e63bc1-e013-4263-b0d0-61f0b7854b4a",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": {
                "token": "{{ACCESS_TOKEN}}"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "x-gw-ims-org-id",
                "value": "{{IMS_ORG}}"
              },
              {
                "key": "x-api-key",
                "value": "{{API_KEY}}"
              },
              {
                "key": "x-sandbox-name",
                "value": "",
                "type": "text",
                "disabled": true
              }
            ],
            "url": "https://{{PLATFORM_GATEWAY}}/data/foundation/catalog/dataset/{{NEWPROFILEDATASETID}}"
          },
          "response": []
        },
        {
          "name": "Cleanup Profile Schema",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1570063e-ea92-4ef3-a6b0-3a7243c5fb47",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "5e1461b8-5553-4db3-aae0-23541393c914",
                "exec": [
                  "if ( pm.environment.get(\"PROFILEBATCHCOMPLETE\") === \"fail\")",
                  "    {  ",
                  "    console.log(\"Not deleting Dataset.  Data does not appear in ADLS in 60 seconds\")",
                  "    return;",
                  "    }"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "71ac7be3-8561-4998-b14b-90e4ee6272f5",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": {
                "token": "{{ACCESS_TOKEN}}"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "x-gw-ims-org-id",
                "value": "{{IMS_ORG}}"
              },
              {
                "key": "x-api-key",
                "value": "{{API_KEY}}"
              },
              {
                "key": "x-sandbox-name",
                "value": "",
                "type": "text",
                "disabled": true
              }
            ],
            "url": "https://{{PLATFORM_GATEWAY}}/data/foundation/schemaregistry/tenant/schemas/{{PROFILESCHEMAID}}"
          },
          "response": []
        }
      ],
      "_postman_id": "3aaaed06-99f2-4dfd-8913-6948f305cccc"
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": {
      "token": "{{ACCESS_TOKEN}}"
    }
  }
}
